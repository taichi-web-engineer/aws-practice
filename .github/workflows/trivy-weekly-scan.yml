name: Weekly Trivy Scan

on:
  schedule:
    # JST: 日曜 00:00 (= UTC: 土曜 15:00)
    - cron: '0 15 * * 6'

  workflow_dispatch: # 手動実行を可能にする

# 権限設定を追加
permissions:
  contents: read
  security-events: write


jobs:
  scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t aws-practice-api:${{ github.sha }} ./api
        # 注意: Dockerfileのパスが異なる場合は適宜変更してください
        # 例: docker build -t my-docker-image:${{ github.sha }} -f ./path/to/Dockerfile .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'aws-practice-api:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM,LOW'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Generate Trivy scan report
        run: |
          # HTMLレポート用のディレクトリを作成
          mkdir -p trivy-reports
          
          # テキスト形式のレポートも生成
          docker run --rm \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v ${{ github.workspace }}:/tmp \
            aquasec/trivy:latest \
            image -f table -o /tmp/trivy-reports/report.txt my-docker-image:${{ github.sha }}
          
          echo "詳細なスキャン結果はレポートをご覧ください。"

      - name: Archive vulnerability reports
        uses: actions/upload-artifact@v3
        with:
          name: trivy-vulnerability-reports
          path: trivy-reports/
          retention-days: 90